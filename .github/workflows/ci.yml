name: Continous integration

on:
  pull_request:
  push:

jobs:
  wheel_build:
    name: "Wheel Build"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            generator: "Unix Makefiles"
          - os: windows-latest
            generator: "NMake Makefiles"

    runs-on: ${{ matrix.os }}
    env:
      working-directory: ./
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Install MSVC
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install build-essentials
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt install -y build-essential g++

      - name: Build C++ libraries
        working-directory: ${{env.working-directory}}/cpp_code
        run: |
          mkdir build
          cd build
          echo '-G "${{matrix.generator}}"'
          cmake -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --config Release

      - name: Install pip dependencies
        working-directory: ${{env.working-directory}}
        run: |
          pip install Cython wheel setuptools

      - name: Build Python extension
        working-directory: ${{env.working-directory}}
        run: |
          python setup.py build_ext -f -i -j 4
          python setup.py bdist_wheel

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheel-${{ matrix.os }}
          path: dist/*.whl